21:38:08: SMBaseBot->addChannel() :: DEBUG Joined #testeroo on SwiftIRC
21:38:08: SMBaseBot->addListener() :: DEBUG Added new listener for SwiftIRC
21:38:08: SMBaseBot->addListener() :: DEBUG Added new listener for SwiftIRC
21:38:08: SMBaseBot->addListener() :: DEBUG Added new listener for SwiftIRC
21:38:08: SMBaseBot->addListener() :: DEBUG Added new listener for SwiftIRC
21:38:08: SMBaseBot->addListener() :: DEBUG Added new listener for SwiftIRC
21:38:08: SMBaseBot->addListener() :: DEBUG Added new listener for SwiftIRC
21:38:08: SMBaseBot->addListener() :: DEBUG Added new listener for SwiftIRC
21:38:08: SMBaseBot->addListener() :: DEBUG Added new listener for SwiftIRC
21:38:08: SMBaseBot->addListener() :: DEBUG Added new listener for SwiftIRC
21:38:08: Question->load() :: test3 has no question
21:38:08: Question->load() :: test4 has no answer
21:38:08: SMBaseBot->addListener() :: DEBUG Added new listener for SwiftIRC
21:38:08: SMBaseBot->addListener() :: DEBUG Added new listener for SwiftIRC
21:38:08: SMBaseBot->addListener() :: DEBUG Added new listener for SwiftIRC
21:38:08: SMBaseBot->addListener() :: DEBUG Added new listener for SwiftIRC
21:38:08: SMBaseBot->addListener() :: DEBUG Added new listener for SwiftIRC
21:38:08: SMBaseBot->addListener() :: DEBUG Added new listener for SwiftIRC
21:38:08: SMBaseBot->addListener() :: DEBUG Added new listener for SwiftIRC
21:38:08: SMBaseBot->addListener() :: DEBUG Added new listener for SwiftIRC
21:38:08: SMBaseBot->addListener() :: DEBUG Added new listener for SwiftIRC
21:38:08: SMBaseBot->addListener() :: DEBUG Added new listener for SwiftIRC
21:38:09: Client->newTable() :: INFO: Creating new table...
21:38:09: Client->newTable() :: INFO: Creating new table...
21:38:09: Client->newTable() :: INFO: Creating new table...
21:38:09: Client->newTable() :: INFO: Creating new table...
21:38:09: Client->newTable() :: INFO: Creating new table...
21:38:09: Client->newTable() :: INFO: Creating new table...
21:38:09: Client->newTable() :: INFO: Creating new table...
21:38:09: Client->newTable() :: INFO: Creating new table...
21:38:09: Client->newTable() :: INFO: Creating new table...
21:38:09: CheckUser::CheckIdentified->call() :: DEBUG Checking the status of JReid
21:38:12: CheckUser::CheckIdentified->call() :: DEBUG Checking the status of Mr_J_Rune
21:38:56: CheckUser::CheckIdentified->call() :: INFO: JReid identified
21:39:00: CheckUser::CheckIdentified->call() :: INFO: Mr_J_Rune identified
21:39:13: CheckUser::CheckIdentified->call() :: DEBUG Checking the status of Unknown14538
21:39:26: CheckUser::CheckIdentified->call() :: DEBUG Checking the status of JReid
21:39:27: CheckUser::CheckIdentified->call() :: INFO: JReid identified
21:39:27: CheckIdentified->sendStatusRequest() :: INFO: JReid identified
21:39:55: CheckUser::CheckIdentified->call() :: DEBUG Checking the status of Mr_J_Rune
21:39:57: CheckUser::CheckIdentified->call() :: INFO: Mr_J_Rune identified
21:39:57: CheckIdentified->sendStatusRequest() :: INFO: Mr_J_Rune identified
21:47:42: DiceDuel->message() :: Exception: java.util.ConcurrentModificationException
21:47:42: DiceDuel->message() :: java.util.ConcurrentModificationException
	at java.util.ArrayList$Itr.checkForComodification(Unknown Source)
	at java.util.ArrayList$Itr.next(Unknown Source)
	at org.smokinmils.games.casino.DiceDuel.call(DiceDuel.java:144)
	at org.smokinmils.games.casino.DiceDuel.message(DiceDuel.java:76)
	at org.smokinmils.bot.Event.onMessage(Event.java:126)
	at sun.reflect.GeneratedMethodAccessor51.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.pircbotx.hooks.ListenerAdapter.onEvent(ListenerAdapter.java:98)
	at org.pircbotx.hooks.managers.ThreadedListenerManager$1.run(ThreadedListenerManager.java:110)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask$Sync.innerRun(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)

